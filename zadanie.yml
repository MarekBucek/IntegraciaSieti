---
heat_template_version: 2016-04-08
description: Basic infractructure template

parameters:
  Popis:
    description: Skuskove zadanie
    type: string
    default: 17_5_2017

  AvailibilityZone:
    description: Availability zone
    type: string
    default: any

  Flavor-DNS:
    description: Flavor
    type: string
    default: linux

  Image-DNS:
    description: image
    type: string
    default: Debian_8.7.1_amd64_Openstack

  Flavor-test:
    description: Flavor
    type: string
    default: nano

  Image-test:
    description: image
    type: string
    default: cirros
    
  Enviroment:
    description: Enviroment
    type: string
    default: test
  
  SubnetDef:
    description: Subnet_Default
    type: string
    default: 10.0.1.0/24
    
  SubnetDNS:
    description: Subnet_DNS
    type: string
    default: 10.0.2.0/24
    
resources:
  Net:
    type: OS::Neutron::Net
    properties:
      admin_state_up: True
      name: { list_join: [ '-', [ { get_param: 'Enviroment' }, 'network' ] ] }
      shared: False

  Subnet1:
    type: OS::Neutron::Subnet
    properties:
      name: { list_join: [ '-', [ { get_param: 'Enviroment' }, 'network' ] ] }
      cidr: { get_param: SubnetDef }
      dns_nameservers:
        - 8.8.8.8
        - 8.8.4.4
      enable_dhcp: True
      gateway_ip: 10.0.1.1
      network: { get_resource: Net }
      
  Subnet2:
    type: OS::Neutron::Subnet
    properties:
      name: { list_join: [ '-', [ { get_param: 'Enviroment' }, 'network' ] ] }
      cidr: { get_param: SubnetDNS }
      dns_nameservers:
        - 8.8.8.8
        - 8.8.4.4
      enable_dhcp: True
      gateway_ip: 10.0.2.1
      network: { get_resource: Net }
      
  Router:
    type: OS::Neutron::Router
    properties:
      admin_state_up: True
      name: { list_join: [ '-', [ { get_param: 'Enviroment' }, 'router' ] ] }
      external_gateway_info: {
        enable_snat: True,
        network: ext-net
      }

  RouterInterface1:
    type: OS::Neutron::RouterInterface
    properties:
      router: { get_resource: Router }
      subnet: { get_resource: Subnet1 }
      
  RouterInterface2:
    type: OS::Neutron::RouterInterface
    properties:
      router: { get_resource: Router }
      subnet: { get_resource: Subnet2 }
      
  DNSSecurityGroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { list_join: [ '-', [ { get_param: 'Popis' }, 'DNS-security-group' ] ] }
      rules: [
        {  direction: ingress, ethertype: IPv4, protocol: tcp, port_range_min: 22, port_range_max: 22, remote_ip_prefix: 10.255.255.0/24 },
        {  direction: ingress, ethertype: IPv4, protocol: tcp, port_range_min: 53, port_range_max: 53, remote_ip_prefix: 10.255.255.0/24 },
        {  direction: ingress, ethertype: IPv4, protocol: icmp, remote_ip_prefix: 10.255.255.0/24 }
      ]
      
  DefPort:
    type: OS::Neutron::Port
    properties:
      name: { list_join: [ '-', [ { get_param: 'Popis' }, 'default-port' ] ] }
      fixed_ips:
        - subnet: { get_resource: Subnet1 }
     # security_groups:
     #   - { get_resource: default }
      network: { get_resource: Net }
      
  DNSPort:
    type: OS::Neutron::Port
    properties:
      name: { list_join: [ '-', [ { get_param: 'Popis' }, 'DNS-port' ] ] }
      fixed_ips:
        - subnet: { get_resource: Subnet2 }
      security_groups:
        - { get_resource: DNSSecurityGroup }
      network: { get_resource: Net }
      
  Serv-defa:
    type: OS::Nova::Server
    properties:
      #name: instance-cv3
      name: { list_join: [ '-', [ { get_param: 'Popis' }, 'default' ] ] }
      availability_zone: { get_param: 'AvailibilityZone' }
      flavor: { get_param: 'Flavor-test' }
      image: { get_param: 'Image-test' }
      networks: 
        - port: { get_resource: 'DefPort' }
      user_data: 
        str_replace:
          template: |
            #!/bin/bash
            hostname $Enviroment-default
            echo "Hello World !!!"
          params:
            $Enviroment: { get_param: Enviroment }
      user_data_format: RAW
      
  Serv-DNS:
    type: OS::Nova::Server
    properties:
      #name: instance-cv3
      name: { list_join: [ '-', [ { get_param: 'Popis' }, 'DNSko' ] ] }
      availability_zone: { get_param: 'AvailibilityZone' }
      flavor: { get_param: 'Flavor-DNS' }
      image: { get_param: 'Image-DNS' }
      networks: 
        - port: { get_resource: 'DNSPort' }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            hostname $Enviroment-DNS
            apt-get update -y
            apt-get install bind9 -y
          params:
            $Enviroment: { get_param: Enviroment }
      user_data_format: RAW
      
    
